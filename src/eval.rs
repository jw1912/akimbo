use std::ops::{AddAssign, SubAssign};

use crate::{init, position::Position};

pub fn eval(pos: &Position) -> i32 {
    let score = pos.pst();

    [1, -1][pos.stm()] * score.taper(pos.phase)
}

#[derive(Clone, Copy, Default)]
pub struct S(i16, i16);

impl AddAssign<S> for S {
    fn add_assign(&mut self, rhs: S) {
        self.0 += rhs.0;
        self.1 += rhs.1;
    }
}

impl SubAssign<S> for S {
    fn sub_assign(&mut self, rhs: S) {
        self.0 -= rhs.0;
        self.1 -= rhs.1;
    }
}

impl S {
    fn taper(self, mut phase: i32) -> i32 {
        let mg = i32::from(self.0);
        let eg = i32::from(self.1);

        phase = phase.min(24);

        (mg * phase + (24 - phase) * eg) / 24
    }
}

pub static PST: [[[S; 64]; 8]; 2] = [
    init!(|i, 8| init!(|j, 64| RAW_PST[i][j ^ 56])),
    init!(|i, 8| init!(|j, 64| S(-RAW_PST[i][j].0, -RAW_PST[i][j].1))),
];
const RAW_PST: [[S; 64]; 8] = [[S(0, 0); 64], [S(0, 0); 64],
    [
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
        S(295, 325), S(301, 323), S(252, 307), S(267, 288), S(263, 294), S(270, 288), S(208, 315), S(215, 328),
        S( 88, 267), S(114, 269), S(146, 244), S(151, 219), S(201, 196), S(197, 193), S(138, 242), S( 76, 250),
        S( 72, 182), S(120, 163), S(116, 147), S(137, 131), S(140, 122), S(126, 132), S(130, 150), S( 69, 156),
        S( 53, 156), S( 98, 143), S( 95, 125), S(122, 115), S(128, 115), S(112, 115), S(119, 130), S( 65, 130),
        S( 57, 142), S( 94, 140), S( 96, 119), S( 88, 131), S(108, 127), S(109, 120), S(152, 120), S( 84, 119),
        S( 43, 158), S(100, 141), S( 72, 143), S( 69, 141), S( 81, 145), S(138, 126), S(156, 126), S( 70, 122),
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
    ], [
        S(189, 297), S(267, 317), S(319, 357), S(343, 320), S(457, 317), S(287, 319), S(323, 282), S(269, 237),
        S(285, 333), S(334, 355), S(497, 320), S(438, 356), S(429, 343), S(486, 318), S(398, 326), S(376, 286),
        S(329, 329), S(480, 328), S(452, 371), S(483, 367), S(516, 346), S(527, 350), S(497, 325), S(456, 296),
        S(385, 338), S(426, 360), S(427, 388), S(479, 382), S(456, 382), S(495, 367), S(429, 361), S(431, 330),
        S(381, 335), S(405, 351), S(420, 380), S(420, 390), S(442, 376), S(429, 378), S(426, 362), S(390, 329),
        S(368, 325), S(386, 355), S(419, 349), S(413, 374), S(427, 368), S(428, 346), S(436, 325), S(378, 324),
        S(355, 307), S(312, 340), S(381, 341), S(397, 346), S(398, 352), S(426, 326), S(375, 327), S(384, 290),
        S(233, 317), S(372, 279), S(307, 335), S(344, 338), S(374, 326), S(358, 329), S(377, 282), S(356, 272),
    ], [
        S(415, 356), S(428, 352), S(289, 381), S(342, 380), S(359, 382), S(368, 372), S(395, 367), S(433, 343),
        S(399, 366), S(465, 370), S(415, 388), S(406, 369), S(477, 371), S(494, 364), S(467, 370), S(373, 362),
        S(417, 379), S(479, 367), S(491, 376), S(487, 375), S(479, 375), S(497, 384), S(476, 378), S(439, 379),
        S(431, 376), S(445, 390), S(462, 393), S(502, 389), S(490, 395), S(488, 389), S(447, 380), S(434, 380),
        S(424, 372), S(458, 379), S(454, 396), S(469, 403), S(483, 386), S(454, 389), S(451, 371), S(439, 366),
        S(435, 362), S(457, 375), S(454, 389), S(458, 390), S(454, 395), S(475, 377), S(458, 369), S(446, 358),
        S(439, 358), S(460, 350), S(456, 369), S(436, 377), S(448, 380), S(462, 364), S(482, 353), S(439, 339),
        S(378, 350), S(428, 367), S(419, 341), S(399, 374), S(412, 368), S(420, 352), S(367, 376), S(395, 360),
    ], [
        S(580, 682), S(599, 674), S(563, 691), S(625, 675), S(621, 674), S(529, 688), S(535, 683), S(569, 674),
        S(581, 676), S(592, 677), S(632, 670), S(639, 668), S(655, 648), S(647, 658), S(572, 675), S(589, 668),
        S(521, 682), S(560, 678), S(575, 674), S(580, 675), S(556, 673), S(600, 658), S(629, 652), S(552, 664),
        S(494, 682), S(515, 677), S(542, 686), S(574, 667), S(563, 669), S(583, 665), S(526, 666), S(508, 677),
        S(477, 680), S(488, 682), S(518, 681), S(527, 675), S(539, 664), S(519, 662), S(551, 651), S(507, 655),
        S(466, 669), S(499, 672), S(512, 662), S(505, 670), S(535, 655), S(530, 649), S(533, 651), S(492, 649),
        S(467, 667), S(515, 660), S(505, 671), S(518, 672), S(534, 654), S(549, 651), S(527, 649), S(436, 673),
        S(509, 658), S(516, 672), S(536, 673), S(549, 668), S(553, 661), S(535, 656), S(492, 671), S(509, 633),
    ], [
        S(1026, 1110), S(1055, 1144), S(1087, 1138), S(1080, 1144), S(1130, 1135), S(1109, 1127), S(1095, 1119), S(1109, 1136),
        S(1030, 1080), S(1007, 1134), S(1065, 1137), S(1083, 1138), S(1072, 1145), S(1122, 1132), S(1101, 1122), S(1113, 1105),
        S(1044, 1078), S(1039, 1114), S(1079, 1108), S(1085, 1146), S(1111, 1143), S(1128, 1133), S(1114, 1121), S(1123, 1114),
        S(1014, 1120), S(1018, 1141), S(1042, 1136), S(1048, 1156), S(1072, 1156), S(1090, 1139), S(1069, 1152), S(1058, 1145),
        S(1043, 1085), S(1022, 1143), S(1044, 1138), S(1047, 1157), S(1056, 1145), S(1058, 1141), S(1068, 1136), S(1056, 1127),
        S(1028, 1101), S(1064, 1066), S(1041, 1130), S(1052, 1118), S(1048, 1124), S(1060, 1128), S(1077, 1114), S(1062, 1107),
        S(1007, 1074), S(1041, 1083), S(1076, 1059), S(1058, 1087), S(1068, 1087), S(1077, 1072), S(1052, 1052), S(1060, 1033),
        S(1047, 1064), S(1031, 1062), S(1043, 1073), S(1076, 1024), S(1030, 1099), S(1011, 1056), S(1007, 1067), S(982, 1027),
    ], [
        S(-12, -78), S(102, -45), S( 96, -33), S( 60, -26), S(-56,   5), S(-31,  32), S( 51,  13), S( 40,  -7),
        S( 97, -21), S( 58,  22), S( 47,  16), S(112,  10), S( 45,  20), S( 21,  54), S(-24,  46), S(-89,  39),
        S( 54,  12), S( 80,  21), S(102,  22), S( 30,  19), S( 58,  20), S(115,  49), S(121,  50), S( -0,  23),
        S(  2,  -9), S(  3,  34), S( 21,  35), S(-40,  47), S(-34,  43), S(-42,  57), S(  2,  42), S(-83,  23),
        S(-88, -12), S( 24,  -6), S(-62,  42), S(-130,  58), S(-128,  62), S(-83,  49), S(-71,  30), S(-91,   3),
        S( 17, -28), S(  1,  -2), S(-45,  26), S(-91,  45), S(-89,  50), S(-71,  40), S( -8,  15), S(-32,  -4),
        S( 29, -43), S( 35, -19), S(-12,  13), S(-98,  32), S(-72,  33), S(-21,  15), S( 36,  -8), S( 46, -32),
        S( -3, -78), S( 77, -64), S( 35, -36), S(-87,  -3), S( 18, -43), S(-43,  -9), S( 62, -46), S( 56, -79),
    ],
];