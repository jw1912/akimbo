use std::ops::{AddAssign, SubAssign};

use crate::{init, position::Position};

pub fn eval(pos: &Position) -> i32 {
    let score = pos.pst();

    [1, -1][pos.stm()] * score.taper(pos.phase)
}

#[derive(Clone, Copy, Default)]
pub struct S(i16, i16);

impl AddAssign<S> for S {
    fn add_assign(&mut self, rhs: S) {
        self.0 += rhs.0;
        self.1 += rhs.1;
    }
}

impl SubAssign<S> for S {
    fn sub_assign(&mut self, rhs: S) {
        self.0 -= rhs.0;
        self.1 -= rhs.1;
    }
}

impl S {
    fn taper(self, mut phase: i32) -> i32 {
        let mg = i32::from(self.0);
        let eg = i32::from(self.1);

        phase = phase.min(24);

        (mg * phase + (24 - phase) * eg) / 24
    }
}

pub static PST: [[[S; 64]; 8]; 2] = [
    init!(|i, 8| init!(|j, 64| RAW_PST[i][j ^ 56])),
    init!(|i, 8| init!(|j, 64| S(-RAW_PST[i][j].0, -RAW_PST[i][j].1))),
];
const RAW_PST: [[S; 64]; 8] = [[S(0, 0); 64], [S(0, 0); 64],
    [
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
        S(284, 252), S(272, 280), S(266, 275), S(281, 285), S(264, 283), S(229, 271), S(192, 279), S(236, 230),
        S(155, 216), S(202, 205), S(214, 197), S(236, 199), S(239, 195), S(213, 193), S(195, 196), S(158, 171),
        S(120, 177), S(152, 171), S(148, 165), S(184, 160), S(203, 153), S(174, 150), S(148, 172), S(129, 156),
        S(101, 160), S(144, 158), S(129, 139), S(156, 124), S(161, 133), S(141, 147), S(162, 158), S(113, 148),
        S(100, 156), S(137, 161), S(108, 142), S(104, 129), S(135, 140), S(136, 156), S(177, 161), S(127, 145),
        S( 97, 173), S(135, 185), S(105, 176), S(100, 147), S(123, 186), S(167, 179), S(187, 177), S(118, 156),
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
    ], [
        S(249, 229), S(259, 209), S(284, 238), S(282, 241), S(272, 233), S(284, 246), S(286, 235), S(253, 206),
        S(277, 238), S(281, 252), S(346, 232), S(357, 240), S(353, 238), S(350, 237), S(267, 248), S(317, 230),
        S(287, 245), S(396, 216), S(388, 257), S(406, 257), S(412, 238), S(427, 254), S(404, 199), S(339, 244),
        S(331, 229), S(341, 259), S(359, 257), S(391, 256), S(373, 264), S(375, 264), S(354, 275), S(356, 233),
        S(313, 245), S(334, 238), S(353, 251), S(340, 271), S(351, 263), S(351, 266), S(340, 248), S(322, 248),
        S(267, 261), S(305, 245), S(319, 259), S(348, 258), S(348, 261), S(326, 259), S(317, 251), S(264, 271),
        S(258, 198), S(267, 257), S(286, 245), S(303, 247), S(300, 254), S(292, 249), S(298, 255), S(285, 220),
        S(242, 188), S(270, 250), S(272, 193), S(272, 238), S(282, 242), S(279, 214), S(262, 265), S(214, 179),
    ], [
        S(263, 281), S(307, 241), S(281, 275), S(274, 295), S(295, 284), S(265, 268), S(293, 242), S(271, 276),
        S(286, 279), S(348, 276), S(379, 273), S(306, 275), S(365, 259), S(356, 272), S(320, 276), S(313, 265),
        S(358, 266), S(410, 260), S(400, 262), S(439, 241), S(403, 249), S(428, 264), S(432, 254), S(399, 259),
        S(341, 277), S(382, 284), S(419, 249), S(427, 252), S(428, 260), S(422, 241), S(379, 291), S(359, 277),
        S(351, 258), S(373, 261), S(378, 271), S(400, 268), S(401, 259), S(385, 277), S(375, 260), S(366, 266),
        S(368, 250), S(371, 258), S(370, 279), S(382, 270), S(380, 279), S(374, 275), S(383, 257), S(384, 243),
        S(387, 226), S(372, 254), S(383, 253), S(349, 278), S(358, 269), S(380, 254), S(387, 254), S(394, 217),
        S(337, 246), S(388, 228), S(341, 251), S(327, 250), S(327, 255), S(341, 266), S(383, 210), S(329, 236),
    ], [
        S(497, 523), S(505, 516), S(525, 496), S(527, 513), S(503, 517), S(478, 513), S(464, 511), S(522, 514),
        S(506, 512), S(502, 515), S(556, 501), S(576, 488), S(547, 494), S(555, 489), S(530, 486), S(551, 482),
        S(493, 504), S(503, 506), S(525, 499), S(545, 492), S(541, 492), S(512, 503), S(529, 491), S(534, 481),
        S(449, 519), S(465, 518), S(487, 521), S(491, 517), S(502, 504), S(477, 508), S(498, 492), S(486, 491),
        S(431, 509), S(443, 508), S(444, 510), S(443, 514), S(468, 494), S(440, 497), S(456, 491), S(457, 489),
        S(417, 507), S(435, 501), S(439, 500), S(449, 496), S(447, 500), S(441, 485), S(471, 473), S(437, 490),
        S(416, 493), S(428, 484), S(445, 487), S(449, 491), S(453, 486), S(444, 480), S(451, 468), S(426, 484),
        S(431, 493), S(437, 486), S(454, 491), S(456, 499), S(456, 493), S(438, 490), S(451, 476), S(426, 490),
    ], [
        S(854, 694), S(887, 696), S(874, 723), S(898, 728), S(906, 716), S(855, 699), S(784, 677), S(847, 684),
        S(856, 773), S(844, 796), S(898, 811), S(919, 805), S(922, 806), S(933, 797), S(893, 757), S(945, 766),
        S(863, 792), S(884, 819), S(869, 853), S(921, 828), S(918, 833), S(954, 821), S(939, 813), S(920, 787),
        S(874, 791), S(858, 818), S(875, 845), S(885, 850), S(908, 835), S(893, 851), S(885, 823), S(888, 788),
        S(858, 793), S(863, 799), S(847, 857), S(859, 866), S(865, 853), S(864, 849), S(881, 799), S(873, 796),
        S(854, 799), S(858, 801), S(857, 833), S(845, 844), S(850, 855), S(853, 846), S(863, 820), S(870, 780),
        S(855, 777), S(865, 758), S(857, 793), S(857, 793), S(851, 809), S(866, 788), S(874, 761), S(868, 762),
        S(839, 790), S(846, 791), S(832, 798), S(851, 776), S(846, 782), S(824, 777), S(832, 773), S(847, 800),
    ], [
        S( 29, -25), S( 52,  30), S( 49,  18), S( 48,  13), S( 43,   0), S( 29,  20), S( 37,  27), S( -4, -61),
        S( 26,  10), S( 30,  18), S( 23,  32), S( 22,  26), S( -7,  20), S(-13,  32), S(  5,  43), S(  1,  30),
        S( 19,  20), S( 40,  20), S( 27,  20), S(-14,   6), S(-52,  15), S(-45,  33), S( 23,  38), S( -6,  21),
        S( 20,   6), S( 68,   7), S(  3,  23), S(  2,   8), S(-28,  14), S(-18,  27), S( 77,   1), S( 65, -28),
        S( 34,   1), S( 85,   3), S( 48,  10), S( 23,   8), S( -4,  13), S(  2,  12), S(  6,   8), S(-12, -11),
        S(-38,   6), S(  6,   7), S(-20,  15), S(-17,   7), S( -8,   7), S(-35,   9), S(-17,   4), S(-38, -10),
        S( 21,   8), S( -1,  12), S(-34,   2), S(-57,  -7), S(-55,  -5), S(-36,  -5), S(  9,  -8), S(  2, -25),
        S(-39,  41), S( 46, -31), S(  3, -23), S(-91, -26), S(-33, -39), S(-65, -21), S( 20, -37), S(  1, -45),
    ], 
];