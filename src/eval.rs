use std::ops::{AddAssign, SubAssign};

use crate::{init, position::Position};

pub fn eval(pos: &Position) -> i32 {
    let score = pos.pst();

    [1, -1][pos.stm()] * score.taper(pos.phase)
}

#[derive(Clone, Copy, Default)]
pub struct S(i16, i16);

impl AddAssign<S> for S {
    fn add_assign(&mut self, rhs: S) {
        self.0 += rhs.0;
        self.1 += rhs.1;
    }
}

impl SubAssign<S> for S {
    fn sub_assign(&mut self, rhs: S) {
        self.0 -= rhs.0;
        self.1 -= rhs.1;
    }
}

impl S {
    fn taper(self, mut phase: i32) -> i32 {
        let mg = i32::from(self.0);
        let eg = i32::from(self.1);

        phase = phase.min(24);

        (mg * phase + (24 - phase) * eg) / 24
    }
}

pub static PST: [[[S; 64]; 8]; 2] = [
    init!(|i, 8| init!(|j, 64| RAW_PST[i][j ^ 56])),
    init!(|i, 8| init!(|j, 64| S(-RAW_PST[i][j].0, -RAW_PST[i][j].1))),
];
const RAW_PST: [[S; 64]; 8] = [[S(0, 0); 64], [S(0, 0); 64],
    [
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
        S(180, 184), S(181, 184), S(175, 180), S(174, 177), S(172, 177), S(173, 177), S(166, 181), S(170, 184),
        S(112, 166), S(128, 168), S(129, 161), S(128, 149), S(148, 140), S(146, 137), S(130, 160), S( 81, 163),
        S( 61, 127), S( 94, 116), S( 88, 104), S(105,  93), S(108,  86), S( 96,  93), S(102, 105), S( 57, 110),
        S( 49, 108), S( 78, 102), S( 76,  89), S( 95,  82), S(100,  81), S( 90,  80), S( 95,  91), S( 56,  90),
        S( 52,  98), S( 76,  99), S( 76,  85), S( 71,  93), S( 85,  90), S( 87,  85), S(118,  85), S( 68,  83),
        S( 42, 109), S( 79, 101), S( 59, 102), S( 58, 100), S( 66, 103), S(107,  89), S(121,  89), S( 59,  84),
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
    ], [
        S(217, 227), S(245, 242), S(264, 271), S(258, 253), S(326, 254), S(237, 245), S(258, 238), S(227, 226),
        S(240, 254), S(257, 275), S(364, 254), S(336, 272), S(329, 265), S(356, 253), S(299, 258), S(268, 242),
        S(255, 256), S(361, 256), S(341, 287), S(359, 287), S(371, 275), S(376, 279), S(366, 258), S(331, 243),
        S(285, 267), S(319, 281), S(321, 301), S(353, 299), S(340, 299), S(363, 290), S(322, 284), S(326, 260),
        S(287, 263), S(308, 271), S(316, 295), S(316, 303), S(330, 293), S(323, 294), S(324, 281), S(294, 260),
        S(278, 259), S(292, 276), S(314, 275), S(314, 290), S(323, 285), S(321, 274), S(327, 257), S(285, 259),
        S(268, 246), S(251, 259), S(288, 267), S(299, 272), S(300, 274), S(321, 256), S(285, 258), S(286, 242),
        S(237, 241), S(280, 238), S(248, 256), S(265, 264), S(284, 258), S(274, 261), S(283, 242), S(264, 239),
    ], [
        S(267, 285), S(321, 276), S(249, 289), S(273, 290), S(278, 293), S(274, 288), S(308, 283), S(296, 273),
        S(293, 289), S(342, 288), S(307, 302), S(308, 284), S(354, 289), S(363, 285), S(346, 288), S(271, 284),
        S(310, 295), S(360, 285), S(364, 294), S(360, 293), S(353, 292), S(363, 301), S(355, 293), S(331, 295),
        S(325, 291), S(333, 304), S(346, 306), S(365, 306), S(362, 307), S(359, 304), S(337, 295), S(326, 295),
        S(322, 287), S(346, 293), S(339, 308), S(350, 312), S(357, 301), S(341, 303), S(340, 288), S(332, 284),
        S(329, 281), S(343, 290), S(342, 301), S(342, 304), S(342, 307), S(354, 295), S(346, 288), S(335, 280),
        S(333, 277), S(346, 274), S(343, 286), S(329, 293), S(336, 298), S(350, 282), S(359, 280), S(333, 265),
        S(293, 271), S(326, 281), S(316, 270), S(305, 289), S(314, 285), S(315, 279), S(288, 290), S(300, 278),
    ], [
        S(497, 506), S(522, 496), S(497, 508), S(537, 498), S(535, 497), S(479, 504), S(492, 499), S(499, 497),
        S(507, 497), S(515, 499), S(536, 498), S(537, 498), S(554, 481), S(548, 487), S(508, 495), S(521, 490),
        S(469, 499), S(497, 496), S(508, 493), S(511, 494), S(491, 493), S(536, 478), S(545, 477), S(495, 486),
        S(449, 498), S(465, 496), S(484, 502), S(505, 488), S(502, 489), S(518, 485), S(477, 486), S(461, 494),
        S(440, 496), S(450, 497), S(467, 498), S(475, 493), S(483, 486), S(471, 484), S(491, 478), S(460, 479),
        S(436, 488), S(455, 491), S(462, 485), S(457, 491), S(479, 481), S(477, 476), S(478, 478), S(452, 474),
        S(436, 485), S(464, 484), S(457, 491), S(465, 493), S(475, 481), S(489, 478), S(474, 477), S(429, 482),
        S(458, 480), S(464, 491), S(478, 491), S(489, 487), S(493, 481), S(482, 475), S(454, 487), S(463, 459),
    ], [
        S(863, 914), S(903, 941), S(930, 937), S(921, 942), S(955, 942), S(946, 933), S(939, 923), S(937, 937),
        S(881, 899), S(869, 938), S(907, 946), S(923, 947), S(911, 957), S(953, 943), S(941, 936), S(950, 918),
        S(897, 896), S(894, 921), S(918, 920), S(924, 954), S(943, 953), S(959, 946), S(949, 935), S(957, 929),
        S(878, 925), S(880, 942), S(894, 940), S(897, 958), S(915, 961), S(929, 948), S(912, 961), S(908, 951),
        S(902, 891), S(881, 948), S(900, 938), S(901, 959), S(906, 949), S(909, 946), S(915, 949), S(909, 935),
        S(893, 908), S(916, 879), S(900, 930), S(908, 920), S(905, 926), S(912, 933), S(923, 923), S(914, 921),
        S(877, 892), S(901, 893), S(925, 877), S(913, 896), S(919, 897), S(929, 884), S(906, 880), S(913, 877),
        S(916, 874), S(895, 880), S(902, 889), S(923, 856), S(894, 909), S(885, 881), S(881, 893), S(863, 867),
    ], [
        S(-13, -41), S( 33, -19), S( 32, -13), S( 22, -12), S(-17,  -1), S( -3,  21), S( 16,  18), S(  8,   0),
        S( 36,  -7), S( 25,  24), S( 20,  17), S( 40,  14), S( 21,  17), S( 23,  36), S(  4,  28), S(-27,  19),
        S( 23,  16), S( 38,  20), S( 38,  24), S( 20,  14), S( 26,  16), S( 47,  40), S( 48,  40), S( -3,  17),
        S(  5,  -6), S( 12,  22), S( 19,  24), S( -1,  28), S( -1,  25), S(  4,  32), S(  9,  27), S(-42,  12),
        S(-31, -15), S( 25,  -6), S(-21,  25), S(-47,  32), S(-46,  34), S(-35,  28), S(-47,  19), S(-51,  -3),
        S(  7, -19), S(  0,  -2), S(-24,  15), S(-56,  29), S(-52,  31), S(-45,  25), S( -8,  10), S(-27,  -3),
        S( 10, -27), S( 24, -15), S( -9,   8), S(-62,  19), S(-50,  22), S(-18,  10), S( 21,  -6), S( 28, -22),
        S(-24, -45), S( 51, -44), S( 21, -25), S(-54,  -7), S(  9, -29), S(-33,  -6), S( 39, -31), S( 31, -52),
    ], 
];