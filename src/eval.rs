use std::ops::{AddAssign, SubAssign};

use crate::{init, position::Position};

pub fn eval(pos: &Position) -> i32 {
    let score = pos.pst();

    [1, -1][pos.stm()] * score.taper(pos.phase)
}

#[derive(Clone, Copy, Default)]
pub struct S(i16, i16);

impl AddAssign<S> for S {
    fn add_assign(&mut self, rhs: S) {
        self.0 += rhs.0;
        self.1 += rhs.1;
    }
}

impl SubAssign<S> for S {
    fn sub_assign(&mut self, rhs: S) {
        self.0 -= rhs.0;
        self.1 -= rhs.1;
    }
}

impl S {
    fn taper(self, mut phase: i32) -> i32 {
        let mg = i32::from(self.0);
        let eg = i32::from(self.1);

        phase = phase.min(24);

        (mg * phase + (24 - phase) * eg) / 24
    }
}

pub static PST: [[[S; 64]; 8]; 2] = [
    init!(|i, 8| init!(|j, 64| RAW_PST[i][j ^ 56])),
    init!(|i, 8| init!(|j, 64| S(-RAW_PST[i][j].0, -RAW_PST[i][j].1))),
];
const RAW_PST: [[S; 64]; 8] = [[S(0, 0); 64], [S(0, 0); 64],
    [
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
        S(230, 190), S(241, 209), S(225, 199), S(209, 219), S(204, 216), S(210, 221), S( 81, 245), S(105, 218),
        S(101, 155), S(142, 149), S(146, 154), S(164, 144), S(168, 145), S(152, 137), S(132, 154), S(114, 134),
        S( 90, 124), S(114, 121), S(106, 117), S(129, 110), S(141, 107), S(134, 104), S(120, 121), S( 97, 110),
        S( 80, 113), S(111, 109), S( 95, 103), S(116,  91), S(123,  94), S(113, 103), S(125, 107), S( 92, 103),
        S( 76, 111), S(105, 116), S( 85, 104), S( 88,  96), S(106, 100), S(112, 101), S(139, 107), S( 98,  99),
        S( 74, 120), S(103, 127), S( 84, 118), S( 76, 100), S( 96, 131), S(129, 113), S(143, 114), S( 94, 106),
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
    ], [
        S(169, 198), S(222, 250), S(343, 241), S(298, 269), S(318, 242), S(298, 258), S(300, 226), S(208, 219),
        S(338, 242), S(337, 248), S(394, 238), S(422, 233), S(410, 239), S(397, 228), S(352, 239), S(394, 232),
        S(310, 261), S(386, 238), S(407, 255), S(432, 251), S(424, 251), S(461, 247), S(418, 230), S(358, 250),
        S(353, 239), S(363, 260), S(382, 263), S(402, 259), S(383, 275), S(393, 263), S(375, 273), S(373, 257),
        S(344, 249), S(371, 237), S(362, 263), S(364, 270), S(375, 275), S(369, 279), S(368, 254), S(360, 262),
        S(319, 258), S(340, 243), S(349, 263), S(361, 255), S(363, 261), S(352, 260), S(354, 250), S(316, 273),
        S(328, 191), S(315, 245), S(335, 234), S(340, 251), S(338, 256), S(331, 243), S(334, 245), S(324, 237),
        S(307, 204), S(318, 257), S(317, 216), S(324, 237), S(328, 240), S(317, 233), S(313, 267), S(265, 194),
    ], [
        S(267, 321), S(372, 275), S(333, 286), S(236, 310), S(326, 300), S(289, 271), S(360, 285), S(307, 298),
        S(349, 280), S(359, 283), S(393, 279), S(391, 280), S(403, 269), S(375, 286), S(376, 264), S(365, 285),
        S(376, 281), S(416, 266), S(389, 282), S(451, 247), S(427, 264), S(477, 267), S(431, 274), S(403, 271),
        S(343, 285), S(396, 280), S(417, 259), S(427, 263), S(417, 261), S(414, 266), S(393, 284), S(388, 272),
        S(378, 262), S(387, 262), S(388, 275), S(408, 270), S(412, 267), S(393, 274), S(391, 261), S(379, 260),
        S(394, 248), S(386, 271), S(381, 278), S(395, 273), S(394, 270), S(386, 269), S(389, 248), S(399, 255),
        S(399, 234), S(389, 256), S(392, 261), S(373, 269), S(377, 267), S(388, 251), S(395, 259), S(411, 244),
        S(388, 249), S(400, 245), S(366, 250), S(353, 263), S(358, 251), S(365, 261), S(401, 233), S(370, 247),
    ], [
        S(568, 483), S(528, 486), S(565, 470), S(572, 474), S(568, 483), S(480, 501), S(531, 483), S(539, 490),
        S(527, 477), S(529, 475), S(560, 464), S(598, 454), S(580, 460), S(584, 454), S(553, 452), S(560, 452),
        S(523, 470), S(532, 470), S(548, 462), S(571, 453), S(581, 446), S(572, 451), S(559, 455), S(538, 454),
        S(484, 480), S(499, 476), S(513, 477), S(528, 470), S(537, 462), S(492, 478), S(525, 465), S(489, 465),
        S(461, 477), S(469, 479), S(493, 469), S(492, 471), S(502, 464), S(487, 465), S(510, 454), S(495, 459),
        S(458, 473), S(485, 465), S(482, 471), S(494, 454), S(489, 464), S(479, 453), S(504, 453), S(480, 457),
        S(456, 466), S(480, 461), S(476, 467), S(491, 462), S(486, 458), S(490, 453), S(491, 446), S(477, 452),
        S(471, 460), S(479, 456), S(489, 457), S(487, 465), S(490, 459), S(477, 456), S(488, 452), S(469, 460),
    ], [
        S(903, 927), S(928, 891), S(935, 930), S(942, 899), S(987, 890), S(991, 901), S(1002, 874), S(986, 865),
        S(897, 914), S(902, 934), S(924, 936), S(930, 933), S(954, 943), S(934, 964), S(927, 938), S(988, 857),
        S(905, 896), S(933, 926), S(928, 939), S(937, 959), S(955, 942), S(1002, 926), S(993, 898), S(978, 883),
        S(922, 905), S(919, 930), S(926, 943), S(930, 950), S(928, 964), S(930, 965), S(923, 953), S(936, 918),
        S(924, 912), S(926, 895), S(920, 931), S(924, 941), S(933, 918), S(926, 937), S(930, 928), S(943, 861),
        S(940, 861), S(924, 900), S(922, 922), S(918, 923), S(927, 915), S(917, 932), S(936, 878), S(933, 884),
        S(921, 836), S(927, 869), S(929, 875), S(925, 881), S(922, 901), S(939, 867), S(944, 849), S(953, 829),
        S(908, 885), S(921, 892), S(917, 878), S(920, 877), S(917, 862), S(908, 871), S(905, 838), S(931, 856),
    ], [
        S(-28, -78), S( 84, -11), S( 99,  -1), S( 82, -20), S(116, -47), S( 80, -15), S(105,  -7), S(-15, -127),
        S( 94, -35), S(144, -12), S(116,  -6), S( 65,  -3), S( -2,  10), S(100,  -1), S(115,   7), S( 77,  -9),
        S(106,  -1), S(131,   1), S( 70,  -3), S( 61, -11), S( 43,  -9), S( 78,  -1), S(122,  12), S( 34,  -4),
        S( 39, -12), S(139, -11), S( 65,   4), S( 10,   3), S( -2,   1), S( 13,  14), S(124,  -9), S( 73, -40),
        S( 74,  -5), S( 59,  12), S( 39,  15), S(-10,  15), S(-17,  19), S( 11,  18), S( 29,   8), S(  1,   4),
        S(-48,  26), S(-17,  23), S(-54,  28), S(-53,  22), S(-20,  20), S(-38,  21), S(-24,  24), S(-36,  18),
        S( -1,  28), S(-20,  28), S(-35,  17), S(-55,  16), S(-56,  17), S(-41,  17), S( -9,  18), S(-15,  16),
        S( -8,  21), S( 11,   3), S(-16,   3), S(-88,   7), S(-39,  -5), S(-64,  14), S( -7,   4), S( -6, -15),
    ], 
];