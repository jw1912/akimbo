use std::ops::{AddAssign, SubAssign};

use crate::{init, position::Position};

pub fn eval(pos: &Position) -> i32 {
    let score = pos.pst();

    [1, -1][pos.stm()] * score.taper(pos.phase)
}

#[derive(Clone, Copy, Default)]
pub struct S(i16, i16);

impl AddAssign<S> for S {
    fn add_assign(&mut self, rhs: S) {
        self.0 += rhs.0;
        self.1 += rhs.1;
    }
}

impl SubAssign<S> for S {
    fn sub_assign(&mut self, rhs: S) {
        self.0 -= rhs.0;
        self.1 -= rhs.1;
    }
}

impl S {
    fn taper(self, mut phase: i32) -> i32 {
        let mg = i32::from(self.0);
        let eg = i32::from(self.1);

        phase = phase.min(24);

        (mg * phase + (24 - phase) * eg) / 24
    }
}

pub static PST: [[[S; 64]; 8]; 2] = [
    init!(|i, 8| init!(|j, 64| RAW_PST[i][j ^ 56])),
    init!(|i, 8| init!(|j, 64| S(-RAW_PST[i][j].0, -RAW_PST[i][j].1))),
];
const RAW_PST: [[S; 64]; 8] = [[S(0, 0); 64], [S(0, 0); 64],
    [
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
        S(239, 186), S(256, 198), S(246, 189), S(260, 199), S(219, 209), S(193, 219), S( 93, 233), S(161, 198),
        S(131, 146), S(167, 137), S(181, 136), S(193, 132), S(204, 126), S(187, 124), S(152, 139), S(131, 122),
        S(106, 115), S(138, 107), S(127, 108), S(156, 100), S(173,  92), S(155,  92), S(140, 107), S(113, 101),
        S( 95, 102), S(131, 100), S(114,  91), S(136,  82), S(143,  83), S(132,  92), S(149,  95), S(109,  94),
        S( 91, 102), S(127, 103), S(100,  95), S(102,  89), S(125,  90), S(126,  94), S(164,  95), S(117,  89),
        S( 89, 113), S(125, 116), S( 97, 116), S( 95,  99), S(112, 122), S(152, 103), S(172,  98), S(114,  95),
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
    ], [
        S(209, 222), S(290, 222), S(349, 234), S(321, 247), S(303, 235), S(309, 260), S(364, 214), S(187, 197),
        S(352, 217), S(334, 244), S(409, 214), S(454, 221), S(420, 220), S(402, 227), S(308, 242), S(430, 219),
        S(338, 238), S(411, 223), S(412, 239), S(437, 243), S(440, 230), S(467, 238), S(434, 213), S(379, 235),
        S(367, 221), S(371, 250), S(386, 254), S(411, 245), S(395, 256), S(404, 247), S(390, 265), S(385, 229),
        S(347, 240), S(385, 226), S(378, 248), S(373, 255), S(386, 253), S(381, 261), S(376, 238), S(359, 242),
        S(318, 250), S(347, 237), S(356, 246), S(382, 241), S(379, 245), S(362, 244), S(360, 244), S(314, 270),
        S(326, 191), S(313, 240), S(335, 232), S(346, 238), S(344, 240), S(333, 234), S(341, 241), S(331, 231),
        S(316, 187), S(321, 243), S(320, 203), S(313, 234), S(334, 230), S(326, 217), S(313, 257), S(241, 204),
    ], [
        S(316, 299), S(337, 273), S(349, 266), S(307, 290), S(339, 283), S(297, 272), S(344, 269), S(348, 285),
        S(350, 264), S(384, 264), S(403, 264), S(348, 271), S(432, 250), S(386, 269), S(386, 262), S(373, 262),
        S(389, 259), S(421, 260), S(418, 254), S(464, 230), S(440, 242), S(465, 252), S(457, 250), S(419, 251),
        S(371, 266), S(411, 267), S(436, 245), S(440, 244), S(439, 242), S(438, 239), S(408, 272), S(399, 263),
        S(384, 252), S(408, 251), S(407, 254), S(419, 253), S(428, 251), S(407, 258), S(408, 248), S(396, 251),
        S(399, 236), S(400, 248), S(398, 261), S(406, 257), S(403, 257), S(398, 257), S(405, 233), S(413, 232),
        S(412, 222), S(401, 241), S(408, 246), S(381, 256), S(389, 252), S(407, 234), S(409, 237), S(417, 217),
        S(390, 235), S(412, 230), S(373, 238), S(365, 243), S(365, 243), S(375, 248), S(417, 217), S(370, 238),
    ], [
        S(556, 465), S(565, 461), S(567, 449), S(586, 455), S(558, 466), S(518, 471), S(529, 468), S(578, 463),
        S(555, 453), S(545, 453), S(601, 436), S(617, 426), S(594, 437), S(603, 428), S(592, 425), S(593, 428),
        S(538, 445), S(554, 444), S(573, 435), S(586, 428), S(588, 428), S(564, 442), S(599, 427), S(557, 431),
        S(508, 454), S(525, 456), S(536, 455), S(542, 450), S(562, 432), S(522, 453), S(552, 434), S(519, 442),
        S(491, 451), S(505, 449), S(507, 447), S(508, 444), S(524, 439), S(509, 442), S(520, 437), S(508, 437),
        S(476, 450), S(504, 444), S(497, 444), S(508, 439), S(505, 443), S(494, 440), S(527, 421), S(493, 438),
        S(468, 445), S(491, 437), S(500, 439), S(507, 438), S(506, 436), S(505, 433), S(499, 425), S(490, 430),
        S(487, 441), S(496, 434), S(506, 439), S(509, 443), S(508, 440), S(493, 437), S(503, 430), S(479, 445),
    ], [
        S(929, 881), S(980, 850), S(931, 899), S(980, 868), S(961, 901), S(996, 880), S(973, 848), S(1016, 845),
        S(897, 891), S(890, 917), S(932, 903), S(954, 906), S(940, 927), S(932, 931), S(939, 894), S(1001, 849),
        S(911, 870), S(923, 918), S(906, 931), S(956, 912), S(951, 907), S(993, 902), S(992, 866), S(958, 869),
        S(929, 866), S(902, 918), S(914, 923), S(921, 932), S(935, 922), S(929, 929), S(930, 924), S(933, 883),
        S(914, 869), S(918, 871), S(910, 918), S(915, 925), S(919, 920), S(920, 910), S(924, 896), S(930, 871),
        S(927, 852), S(917, 873), S(914, 892), S(908, 900), S(912, 907), S(908, 910), S(922, 885), S(931, 849),
        S(920, 843), S(923, 852), S(918, 862), S(915, 870), S(909, 880), S(931, 845), S(935, 824), S(947, 792),
        S(904, 868), S(910, 862), S(896, 876), S(908, 854), S(906, 848), S(906, 835), S(931, 778), S(914, 861),
    ], [
        S( 11, -85), S(116, -19), S(107, -19), S(109, -24), S(116, -49), S(107, -18), S(125, -10), S(-62, -125),
        S(122, -32), S(131, -12), S( 92,   2), S( 73,   0), S( 48,  -3), S( 84,   3), S(126,   5), S(101,  -7),
        S( 80,  -7), S(135,  -6), S(110,  -6), S( 44, -11), S(-23,  -0), S( 32,  11), S(127,  12), S( 64,  -6),
        S( 17,  -2), S(113,  -7), S( 50,  10), S( 15,   4), S( 13,   4), S( 28,  13), S(117,  -7), S(116, -38),
        S( 84,  -6), S( 74,   5), S( 48,  12), S( -3,  15), S(  0,  16), S(  2,  19), S( -9,  18), S( -3,   6),
        S(-43,  15), S(  7,  18), S(-36,  23), S(-21,  17), S( -5,  15), S(-36,  22), S(-20,  21), S(-39,  21),
        S(  3,  32), S( -6,  21), S(-35,  16), S(-52,  14), S(-52,  15), S(-36,  15), S( -8,  18), S(-15,  14),
        S(-27,  37), S( 20,   0), S(-13,   3), S(-94,  10), S(-39,  -6), S(-62,  12), S( -2,  -0), S(-11,  -9),
    ],
];