use std::ops::{AddAssign, SubAssign};

use crate::{init, position::Position};

pub fn eval(pos: &Position) -> i32 {
    let score = pos.pst();

    [1, -1][pos.stm()] * score.taper(pos.phase)
}

#[derive(Clone, Copy, Default)]
pub struct S(i16, i16);

impl AddAssign<S> for S {
    fn add_assign(&mut self, rhs: S) {
        self.0 += rhs.0;
        self.1 += rhs.1;
    }
}

impl SubAssign<S> for S {
    fn sub_assign(&mut self, rhs: S) {
        self.0 -= rhs.0;
        self.1 -= rhs.1;
    }
}

impl S {
    fn taper(self, mut phase: i32) -> i32 {
        let mg = i32::from(self.0);
        let eg = i32::from(self.1);

        phase = phase.min(24);

        (mg * phase + (24 - phase) * eg) / 24
    }
}

pub static PST: [[[S; 64]; 8]; 2] = [
    init!(|i, 8| init!(|j, 64| RAW_PST[i][j ^ 56])),
    init!(|i, 8| init!(|j, 64| S(-RAW_PST[i][j].0, -RAW_PST[i][j].1))),
];
const RAW_PST: [[S; 64]; 8] = [[S(0, 0); 64], [S(0, 0); 64],
    [
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
        S(178, 292), S(231, 277), S(159, 264), S(209, 232), S(189, 245), S(241, 227), S(118, 279), S( 50, 311),
        S( 68, 205), S( 86, 209), S(111, 190), S(118, 170), S(162, 151), S(154, 147), S(106, 187), S( 59, 193),
        S( 60, 139), S( 96, 125), S( 91, 112), S(108, 102), S(110,  94), S( 99, 101), S(105, 114), S( 58, 119),
        S( 46, 119), S( 80, 110), S( 79,  96), S( 98,  89), S(104,  88), S( 94,  87), S( 98,  99), S( 56,  99),
        S( 49, 109), S( 79, 108), S( 80,  92), S( 74, 101), S( 89,  98), S( 91,  92), S(123,  92), S( 69,  90),
        S( 38, 120), S( 82, 108), S( 63, 110), S( 60, 110), S( 69, 111), S(112,  96), S(126,  96), S( 59,  92),
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
    ], [
        S(157, 240), S(251, 251), S(310, 278), S(313, 253), S(448, 239), S(256, 259), S(340, 219), S(237, 190),
        S(281, 261), S(312, 279), S(438, 253), S(394, 280), S(388, 272), S(432, 251), S(362, 259), S(348, 230),
        S(313, 258), S(429, 256), S(402, 292), S(432, 287), S(463, 269), S(501, 264), S(444, 255), S(413, 234),
        S(351, 266), S(382, 285), S(383, 306), S(420, 302), S(404, 302), S(440, 289), S(384, 288), S(387, 262),
        S(350, 263), S(369, 276), S(378, 299), S(376, 309), S(392, 298), S(384, 300), S(384, 287), S(356, 261),
        S(340, 257), S(354, 279), S(377, 278), S(375, 296), S(384, 291), S(383, 276), S(390, 259), S(348, 257),
        S(331, 241), S(304, 265), S(350, 272), S(361, 275), S(362, 279), S(383, 259), S(346, 259), S(345, 234),
        S(234, 263), S(343, 223), S(299, 263), S(325, 268), S(347, 258), S(333, 263), S(347, 225), S(339, 215),
    ], [
        S(358, 284), S(391, 277), S(275, 300), S(326, 297), S(342, 299), S(346, 292), S(379, 287), S(382, 274),
        S(366, 291), S(407, 293), S(372, 306), S(363, 292), S(427, 292), S(450, 283), S(411, 293), S(343, 288),
        S(376, 300), S(429, 288), S(436, 296), S(434, 294), S(427, 294), S(453, 299), S(427, 298), S(393, 302),
        S(388, 296), S(400, 307), S(411, 311), S(444, 306), S(433, 311), S(434, 306), S(401, 300), S(389, 301),
        S(385, 293), S(408, 299), S(406, 312), S(417, 317), S(427, 305), S(406, 307), S(402, 295), S(395, 290),
        S(393, 286), S(409, 295), S(407, 307), S(409, 308), S(406, 312), S(422, 299), S(410, 292), S(401, 283),
        S(398, 283), S(410, 278), S(409, 292), S(392, 298), S(401, 301), S(413, 288), S(428, 280), S(397, 268),
        S(353, 278), S(388, 290), S(379, 271), S(367, 295), S(375, 291), S(381, 279), S(348, 296), S(365, 285),
    ], [
        S(541, 540), S(562, 532), S(534, 546), S(585, 532), S(582, 533), S(501, 546), S(521, 539), S(538, 534),
        S(536, 537), S(536, 540), S(580, 531), S(582, 531), S(604, 512), S(595, 520), S(524, 537), S(549, 529),
        S(488, 541), S(518, 538), S(528, 535), S(532, 536), S(511, 536), S(558, 519), S(576, 516), S(514, 527),
        S(468, 540), S(485, 537), S(502, 546), S(526, 531), S(517, 534), S(536, 529), S(495, 529), S(473, 538),
        S(453, 541), S(466, 541), S(485, 542), S(494, 537), S(501, 529), S(487, 528), S(509, 521), S(471, 524),
        S(446, 534), S(471, 535), S(481, 528), S(475, 534), S(496, 525), S(493, 520), S(493, 523), S(462, 519),
        S(446, 533), S(481, 527), S(475, 535), S(484, 537), S(494, 524), S(504, 523), S(491, 520), S(422, 538),
        S(474, 528), S(481, 537), S(495, 538), S(505, 535), S(507, 530), S(493, 527), S(463, 537), S(474, 510),
    ], [
        S(974, 995), S(995, 1033), S(1019, 1032), S(1018, 1032), S(1123, 983), S(1130, 965), S(1064, 992), S(1051, 1017),
        S(985, 982), S(964, 1026), S(1001, 1037), S(1002, 1052), S(974, 1080), S(1078, 1011), S(1034, 1028), S(1063, 989),
        S(997, 977), S(990, 1007), S(1015, 1006), S(1005, 1063), S(1032, 1055), S(1079, 1018), S(1057, 1016), S(1069, 999),
        S(972, 1016), S(977, 1030), S(989, 1029), S(989, 1053), S(1000, 1070), S(1018, 1049), S(1000, 1073), S(1003, 1046),
        S(998, 978), S(973, 1042), S(996, 1025), S(994, 1057), S(1000, 1041), S(1002, 1039), S(1006, 1045), S(1004, 1026),
        S(987, 996), S(1012, 963), S(994, 1020), S(1004, 1007), S(1000, 1015), S(1007, 1022), S(1019, 1012), S(1008, 1011),
        S(970, 981), S(997, 979), S(1021, 964), S(1008, 983), S(1015, 985), S(1022, 974), S(1006, 957), S(1009, 965),
        S(1004, 966), S(991, 967), S(998, 976), S(1020, 943), S(989, 997), S(974, 974), S(971, 982), S(952, 958),
    ], [
        S(-45, -69), S(170, -62), S(150, -43), S( 91, -36), S(-116,  11), S(-70,  30), S( 59,  -2), S( 51, -17),
        S(188, -46), S( 64,   8), S( 46,   6), S(116,  -3), S( 51,   9), S( 37,  34), S(-32,  31), S(-130,  38),
        S( 68,  -2), S( 71,  12), S( 89,  11), S( 28,  12), S( 45,  12), S(116,  29), S(119,  29), S( -3,  15),
        S(  1, -10), S(-11,  25), S( 17,  24), S(-35,  35), S(-29,  32), S(-34,  42), S( -5,  30), S(-74,  17),
        S(-70, -10), S( 20,  -6), S(-55,  32), S(-104,  44), S(-107,  48), S(-71,  37), S(-61,  23), S(-81,   2),
        S( 13, -23), S( -7,  -1), S(-37,  20), S(-74,  35), S(-71,  38), S(-62,  31), S(-15,  12), S(-34,  -1),
        S( 17, -32), S( 18, -14), S(-15,  11), S(-79,  25), S(-59,  26), S(-29,  14), S( 18,  -6), S( 26, -23),
        S( -8, -59), S( 51, -46), S( 19, -25), S(-73,  -1), S(  6, -30), S(-37,  -6), S( 39, -34), S( 36, -59),
    ],
];