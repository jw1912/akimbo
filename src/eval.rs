use std::ops::{AddAssign, SubAssign};

use crate::{init, position::Position};

pub fn eval(pos: &Position) -> i32 {
    let score = pos.pst();

    [1, -1][pos.stm()] * score.taper(pos.phase)
}

#[derive(Clone, Copy, Default)]
pub struct S(i16, i16);

impl AddAssign<S> for S {
    fn add_assign(&mut self, rhs: S) {
        self.0 += rhs.0;
        self.1 += rhs.1;
    }
}

impl SubAssign<S> for S {
    fn sub_assign(&mut self, rhs: S) {
        self.0 -= rhs.0;
        self.1 -= rhs.1;
    }
}

impl S {
    fn taper(self, mut phase: i32) -> i32 {
        let mg = i32::from(self.0);
        let eg = i32::from(self.1);

        phase = phase.min(24);

        (mg * phase + (24 - phase) * eg) / 24
    }
}

pub static PST: [[[S; 64]; 8]; 2] = [
    init!(|i, 8| init!(|j, 64| RAW_PST[i][j ^ 56])),
    init!(|i, 8| init!(|j, 64| S(-RAW_PST[i][j].0, -RAW_PST[i][j].1))),
];
const RAW_PST: [[S; 64]; 8] = [[S(0, 0); 64], [S(0, 0); 64],
    [
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
        S(211, 272), S(236, 266), S(174, 251), S(207, 226), S(196, 236), S(225, 225), S(127, 267), S(103, 286),
        S( 66, 202), S( 84, 206), S(108, 187), S(115, 167), S(157, 149), S(150, 145), S(103, 184), S( 57, 189),
        S( 57, 136), S( 93, 123), S( 89, 111), S(105, 100), S(108,  92), S( 96,  99), S(102, 112), S( 56, 117),
        S( 44, 117), S( 78, 108), S( 77,  94), S( 95,  88), S(101,  87), S( 91,  86), S( 95,  97), S( 53,  98),
        S( 47, 107), S( 76, 106), S( 77,  90), S( 72,  99), S( 86,  96), S( 88,  90), S(119,  91), S( 67,  89),
        S( 37, 118), S( 79, 107), S( 60, 108), S( 57, 108), S( 66, 109), S(109,  95), S(123,  95), S( 57,  91),
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
    ], [
        S(153, 234), S(236, 247), S(289, 275), S(296, 249), S(416, 239), S(242, 254), S(297, 221), S(220, 190),
        S(262, 257), S(294, 275), S(418, 249), S(374, 276), S(368, 268), S(412, 247), S(343, 256), S(329, 226),
        S(295, 255), S(408, 253), S(382, 288), S(411, 284), S(441, 266), S(473, 263), S(423, 252), S(393, 231),
        S(333, 262), S(362, 281), S(363, 301), S(401, 297), S(384, 298), S(420, 285), S(364, 284), S(367, 258),
        S(331, 260), S(350, 272), S(359, 295), S(357, 304), S(373, 294), S(365, 295), S(364, 283), S(337, 257),
        S(321, 253), S(335, 276), S(358, 274), S(355, 292), S(365, 287), S(364, 272), S(370, 255), S(329, 253),
        S(312, 238), S(285, 262), S(331, 268), S(342, 271), S(343, 275), S(363, 255), S(327, 255), S(327, 231),
        S(218, 257), S(324, 220), S(280, 260), S(306, 264), S(327, 255), S(314, 259), S(328, 223), S(320, 212),
    ], [
        S(342, 280), S(371, 274), S(256, 296), S(304, 293), S(320, 295), S(325, 288), S(356, 284), S(364, 270),
        S(346, 286), S(388, 289), S(353, 302), S(345, 288), S(407, 288), S(428, 280), S(392, 289), S(325, 283),
        S(357, 296), S(408, 284), S(416, 292), S(413, 291), S(407, 290), S(430, 295), S(406, 294), S(373, 297),
        S(368, 292), S(380, 303), S(391, 306), S(423, 302), S(413, 307), S(413, 302), S(381, 296), S(370, 297),
        S(366, 289), S(388, 295), S(386, 307), S(397, 313), S(407, 301), S(385, 303), S(382, 291), S(375, 286),
        S(372, 282), S(389, 291), S(386, 302), S(389, 303), S(386, 307), S(402, 294), S(390, 288), S(381, 279),
        S(378, 279), S(390, 274), S(388, 288), S(372, 294), S(381, 297), S(393, 284), S(407, 276), S(377, 265),
        S(333, 274), S(368, 286), S(360, 268), S(347, 291), S(356, 287), S(361, 275), S(328, 292), S(346, 280),
    ], [
        S(511, 532), S(530, 525), S(503, 539), S(553, 525), S(549, 525), S(470, 538), S(488, 532), S(506, 526),
        S(506, 529), S(507, 532), S(548, 524), S(551, 524), S(572, 505), S(563, 512), S(495, 529), S(518, 522),
        S(459, 533), S(489, 530), S(499, 527), S(503, 528), S(482, 528), S(527, 512), S(545, 509), S(485, 519),
        S(440, 532), S(456, 529), S(474, 538), S(497, 523), S(489, 526), S(506, 521), S(466, 522), S(446, 531),
        S(425, 533), S(438, 533), S(456, 534), S(466, 529), S(472, 521), S(458, 520), S(480, 513), S(444, 516),
        S(418, 526), S(443, 527), S(453, 520), S(447, 526), S(468, 517), S(465, 512), S(465, 515), S(435, 511),
        S(418, 525), S(453, 519), S(447, 527), S(456, 529), S(466, 516), S(476, 515), S(463, 512), S(395, 530),
        S(447, 520), S(453, 529), S(467, 530), S(477, 526), S(479, 522), S(465, 519), S(435, 529), S(446, 502),
    ], [
        S(920, 965), S(939, 1003), S(964, 1001), S(961, 1003), S(1048, 967), S(1037, 959), S(1004, 965), S(995, 987),
        S(930, 952), S(909, 997), S(946, 1007), S(949, 1019), S(924, 1044), S(1018, 983), S(979, 996), S(1006, 961),
        S(941, 948), S(935, 978), S(961, 976), S(951, 1030), S(978, 1023), S(1020, 990), S(1001, 985), S(1012, 970),
        S(916, 987), S(921, 1001), S(934, 999), S(934, 1023), S(945, 1038), S(964, 1017), S(945, 1040), S(947, 1015),
        S(942, 950), S(918, 1011), S(940, 996), S(938, 1026), S(944, 1011), S(947, 1008), S(951, 1014), S(948, 995),
        S(931, 966), S(956, 935), S(938, 990), S(948, 979), S(944, 986), S(951, 992), S(964, 982), S(952, 980),
        S(914, 952), S(941, 951), S(964, 935), S(952, 955), S(959, 956), S(966, 945), S(951, 928), S(955, 931),
        S(947, 938), S(934, 939), S(942, 947), S(963, 914), S(933, 968), S(918, 945), S(916, 952), S(899, 925),
    ], [
        S(-29, -68), S(106, -47), S(102, -32), S( 64, -29), S(-72,   5), S(-44,  26), S( 42,   4), S( 30, -12),
        S(120, -30), S( 55,  11), S( 42,   8), S(100,   1), S( 46,  11), S( 29,  36), S(-29,  32), S(-94,  32),
        S( 58,   1), S( 69,  13), S( 85,  12), S( 29,  13), S( 45,  13), S(104,  31), S(108,  31), S( -4,  16),
        S(  2,  -9), S( -7,  25), S( 18,  25), S(-32,  35), S(-26,  32), S(-32,  42), S( -2,  31), S(-69,  17),
        S(-67,  -9), S( 22,  -5), S(-50,  32), S(-99,  44), S(-101,  47), S(-66,  37), S(-57,  23), S(-76,   3),
        S( 15, -22), S( -3,  -1), S(-33,  20), S(-70,  34), S(-67,  38), S(-57,  31), S(-11,  12), S(-29,  -1),
        S( 20, -31), S( 22, -13), S(-11,  11), S(-74,  25), S(-54,  25), S(-23,  13), S( 22,  -5), S( 30, -23),
        S( -3, -58), S( 54, -46), S( 23, -25), S(-67,  -1), S( 10, -30), S(-33,  -6), S( 42, -33), S( 39, -58),
    ], 
];