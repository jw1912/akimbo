use std::ops::{AddAssign, SubAssign};

use crate::{init, position::Position};

pub fn eval(pos: &Position) -> i32 {
    let score = pos.pst();

    [1, -1][pos.stm()] * score.taper(pos.phase)
}

#[derive(Clone, Copy, Default)]
pub struct S(i16, i16);

impl AddAssign<S> for S {
    fn add_assign(&mut self, rhs: S) {
        self.0 += rhs.0;
        self.1 += rhs.1;
    }
}

impl SubAssign<S> for S {
    fn sub_assign(&mut self, rhs: S) {
        self.0 -= rhs.0;
        self.1 -= rhs.1;
    }
}

impl S {
    fn taper(self, mut phase: i32) -> i32 {
        let mg = i32::from(self.0);
        let eg = i32::from(self.1);

        phase = phase.min(24);

        (mg * phase + (24 - phase) * eg) / 24
    }
}

pub static PST: [[[S; 64]; 8]; 2] = [
    init!(|i, 8| init!(|j, 64| RAW_PST[i][j ^ 56])),
    init!(|i, 8| init!(|j, 64| S(-RAW_PST[i][j].0, -RAW_PST[i][j].1))),
];
const RAW_PST: [[S; 64]; 8] = [[S(0, 0); 64], [S(0, 0); 64],
    [
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
        S(271, 178), S(268, 181), S(269, 171), S(259, 148), S(249, 148), S(252, 141), S(118, 180), S(210, 156),
        S( 89, 178), S(122, 160), S(146, 145), S(146, 132), S(156, 122), S(172, 112), S(186, 123), S(124, 141),
        S( 64, 135), S( 89, 124), S( 86, 109), S(104,  96), S(114,  94), S(109,  93), S(121, 108), S( 98, 104),
        S( 53, 120), S( 79, 113), S( 80,  95), S( 92,  91), S( 92,  90), S( 97,  92), S(110,  99), S( 74,  97),
        S( 50, 115), S( 76, 112), S( 64,  98), S( 65, 107), S( 80, 102), S( 89,  96), S(131,  95), S( 90,  92),
        S( 51, 121), S( 72, 117), S( 66, 105), S( 52, 114), S( 69, 115), S(108, 103), S(145,  94), S( 79,  96),
        S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100), S(100, 100),
    ], [
        S(163, 256), S(230, 298), S(238, 331), S(270, 310), S(340, 298), S(186, 320), S(291, 280), S(206, 222),
        S(281, 287), S(302, 316), S(362, 302), S(371, 312), S(369, 310), S(424, 287), S(290, 307), S(315, 279),
        S(299, 296), S(358, 304), S(390, 314), S(397, 323), S(424, 312), S(442, 311), S(379, 308), S(338, 292),
        S(314, 307), S(335, 316), S(364, 332), S(397, 329), S(359, 337), S(389, 332), S(332, 322), S(354, 299),
        S(307, 296), S(327, 311), S(345, 328), S(337, 334), S(350, 333), S(343, 325), S(344, 306), S(313, 290),
        S(286, 272), S(311, 296), S(323, 303), S(336, 316), S(346, 313), S(327, 300), S(335, 289), S(289, 276),
        S(261, 264), S(274, 287), S(298, 291), S(313, 291), S(310, 293), S(322, 279), S(302, 281), S(289, 270),
        S(225, 238), S(281, 237), S(254, 278), S(271, 282), S(281, 277), S(308, 259), S(289, 244), S(246, 227),
    ], [
        S(279, 315), S(258, 326), S(268, 322), S(271, 330), S(266, 330), S(218, 329), S(332, 317), S(326, 308),
        S(331, 305), S(364, 315), S(372, 320), S(346, 325), S(371, 318), S(388, 317), S(350, 316), S(341, 302),
        S(349, 316), S(395, 315), S(382, 325), S(409, 318), S(418, 324), S(411, 328), S(406, 318), S(384, 311),
        S(348, 317), S(369, 331), S(393, 321), S(412, 328), S(398, 331), S(397, 328), S(367, 332), S(349, 320),
        S(346, 311), S(362, 324), S(370, 330), S(392, 328), S(388, 328), S(364, 330), S(365, 325), S(357, 308),
        S(350, 304), S(368, 317), S(361, 325), S(370, 319), S(372, 328), S(364, 320), S(367, 305), S(364, 301),
        S(356, 302), S(351, 297), S(364, 307), S(347, 317), S(355, 319), S(372, 303), S(379, 299), S(359, 282),
        S(314, 290), S(337, 300), S(335, 285), S(312, 313), S(325, 306), S(336, 300), S(359, 280), S(312, 290),
    ], [
        S(511, 554), S(492, 570), S(506, 567), S(514, 562), S(524, 559), S(490, 568), S(519, 560), S(542, 548),
        S(471, 578), S(483, 577), S(501, 576), S(522, 568), S(506, 572), S(536, 559), S(515, 565), S(524, 549),
        S(462, 575), S(477, 573), S(491, 575), S(498, 568), S(531, 554), S(520, 559), S(538, 554), S(483, 565),
        S(430, 575), S(435, 578), S(455, 576), S(482, 564), S(484, 561), S(473, 567), S(469, 564), S(465, 556),
        S(412, 560), S(424, 562), S(427, 566), S(445, 560), S(444, 552), S(427, 557), S(431, 551), S(426, 540),
        S(404, 542), S(413, 548), S(422, 547), S(433, 544), S(436, 541), S(432, 539), S(464, 521), S(429, 523),
        S(402, 539), S(422, 538), S(434, 542), S(439, 537), S(443, 533), S(448, 524), S(458, 523), S(406, 532),
        S(430, 531), S(435, 535), S(444, 546), S(450, 545), S(452, 535), S(445, 530), S(452, 528), S(421, 525),
    ], [
        S(910, 1017), S(944, 1013), S(962, 1025), S(985, 1016), S(976, 1026), S(1007, 1009), S(1009, 999), S(1032, 977),
        S(910, 1009), S(896, 1051), S(918, 1064), S(932, 1062), S(935, 1072), S(992, 1026), S(920, 1044), S(993, 971),
        S(933, 976), S(927, 1023), S(942, 1033), S(941, 1051), S(995, 1033), S(1024, 1017), S(1008, 1007), S(982, 998),
        S(926, 982), S(925, 1021), S(933, 1037), S(952, 1040), S(956, 1048), S(949, 1050), S(945, 1030), S(967, 992),
        S(931, 961), S(925, 1001), S(941, 1001), S(935, 1034), S(942, 1015), S(941, 1010), S(953, 993), S(953, 973),
        S(924, 953), S(946, 950), S(944, 978), S(942, 974), S(953, 968), S(957, 963), S(962, 939), S(958, 913),
        S(926, 944), S(947, 939), S(956, 933), S(955, 936), S(955, 936), S(966, 906), S(975, 885), S(952, 869),
        S(935, 929), S(924, 927), S(929, 940), S(953, 904), S(937, 920), S(924, 897), S(909, 909), S(904, 903),
    ], [
        S( 53, -56), S( 51, -12), S( 46, -19), S( 26, -14), S( 53,  -8), S( 23,  17), S( 36,  25), S( 47, -12),
        S( 23,  12), S( 50,  20), S( 65,  13), S(  9,  18), S( 53,  18), S( 53,  38), S( 39,  45), S( 38,   6),
        S(  3,  20), S( 50,  31), S( 17,  27), S( 20,  31), S( 70,  21), S( 62,  43), S( 24,  53), S(-11,  38),
        S( -9,   9), S(-14,  32), S(-36,  39), S( -2,  33), S(-19,  43), S(  8,  39), S(-44,  49), S(-49,  26),
        S(-58,   4), S(-46,  23), S(-52,  31), S(-77,  42), S(-75,  40), S(-71,  36), S(-77,  28), S(-71,   8),
        S(-70,   9), S(-32,  11), S(-69,  23), S(-78,  27), S(-71,  28), S(-67,  21), S(-37,   7), S(-54,  -3),
        S(  0,  -6), S(-19,  -1), S(-43,   6), S(-63,   7), S(-49,   5), S(-35,   2), S( 26, -18), S( 23, -27),
        S( -3, -19), S( 68, -50), S( 33, -34), S(-98,  -9), S( 17, -48), S(-65, -17), S( 52, -48), S( 36, -69),
    ], 
];